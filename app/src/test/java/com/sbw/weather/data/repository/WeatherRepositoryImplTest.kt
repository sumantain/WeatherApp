package com.sbw.weather.data.repository

import com.sbw.weather.data.remote.WeatherApi
import com.sbw.weather.domain.util.Resource
import com.sbw.weather.domain.weather.WeatherData
import com.sbw.weather.domain.weather.WeatherInfo
import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.Moshi
import io.mockk.coEvery
import io.mockk.every
import io.mockk.mockk
import junit.framework.Assert.assertNotNull
import junit.framework.Assert.assertTrue
import kotlinx.coroutines.runBlocking
import org.hamcrest.CoreMatchers.any
import org.junit.Test
import kotlinx.coroutines.test.runTest

internal class WeatherRepositoryImplTest(){

    @Test
    fun testGetWeatherInfo_Success() = runTest {
        val moshi = Moshi.Builder().build()
        val jsonAdapter = moshi.adapter<WeatherInfo>()

        val mockWeatherResponse = jsonAdapter.fromJson("{\"latitude\":52.52,\"longitude\":13.419998,\"generationtime_ms\":0.14197826385498047,\"utc_offset_seconds\":0,\"timezone\":\"GMT\",\"timezone_abbreviation\":\"GMT\",\"elevation\":38.0,\"hourly_units\":{\"time\":\"iso8601\",\"temperature_2m\":\"Â°C\",\"weathercode\":\"wmo code\",\"relativehumidity_2m\":\"%\",\"windspeed_10m\":\"km/h\",\"pressure_msl\":\"hPa\"},\"hourly\":{\"time\":[\"2024-12-11T00:00\",\"2024-12-11T01:00\",\"2024-12-11T02:00\",\"2024-12-11T03:00\",\"2024-12-11T04:00\",\"2024-12-11T05:00\",\"2024-12-11T06:00\",\"2024-12-11T07:00\",\"2024-12-11T08:00\",\"2024-12-11T09:00\",\"2024-12-11T10:00\",\"2024-12-11T11:00\",\"2024-12-11T12:00\",\"2024-12-11T13:00\",\"2024-12-11T14:00\",\"2024-12-11T15:00\",\"2024-12-11T16:00\",\"2024-12-11T17:00\",\"2024-12-11T18:00\",\"2024-12-11T19:00\",\"2024-12-11T20:00\",\"2024-12-11T21:00\",\"2024-12-11T22:00\",\"2024-12-11T23:00\",\"2024-12-12T00:00\",\"2024-12-12T01:00\",\"2024-12-12T02:00\",\"2024-12-12T03:00\",\"2024-12-12T04:00\",\"2024-12-12T05:00\",\"2024-12-12T06:00\",\"2024-12-12T07:00\",\"2024-12-12T08:00\",\"2024-12-12T09:00\",\"2024-12-12T10:00\",\"2024-12-12T11:00\",\"2024-12-12T12:00\",\"2024-12-12T13:00\",\"2024-12-12T14:00\",\"2024-12-12T15:00\",\"2024-12-12T16:00\",\"2024-12-12T17:00\",\"2024-12-12T18:00\",\"2024-12-12T19:00\",\"2024-12-12T20:00\",\"2024-12-12T21:00\",\"2024-12-12T22:00\",\"2024-12-12T23:00\",\"2024-12-13T00:00\",\"2024-12-13T01:00\",\"2024-12-13T02:00\",\"2024-12-13T03:00\",\"2024-12-13T04:00\",\"2024-12-13T05:00\",\"2024-12-13T06:00\",\"2024-12-13T07:00\",\"2024-12-13T08:00\",\"2024-12-13T09:00\",\"2024-12-13T10:00\",\"2024-12-13T11:00\",\"2024-12-13T12:00\",\"2024-12-13T13:00\",\"2024-12-13T14:00\",\"2024-12-13T15:00\",\"2024-12-13T16:00\",\"2024-12-13T17:00\",\"2024-12-13T18:00\",\"2024-12-13T19:00\",\"2024-12-13T20:00\",\"2024-12-13T21:00\",\"2024-12-13T22:00\",\"2024-12-13T23:00\",\"2024-12-14T00:00\",\"2024-12-14T01:00\",\"2024-12-14T02:00\",\"2024-12-14T03:00\",\"2024-12-14T04:00\",\"2024-12-14T05:00\",\"2024-12-14T06:00\",\"2024-12-14T07:00\",\"2024-12-14T08:00\",\"2024-12-14T09:00\",\"2024-12-14T10:00\",\"2024-12-14T11:00\",\"2024-12-14T12:00\",\"2024-12-14T13:00\",\"2024-12-14T14:00\",\"2024-12-14T15:00\",\"2024-12-14T16:00\",\"2024-12-14T17:00\",\"2024-12-14T18:00\",\"2024-12-14T19:00\",\"2024-12-14T20:00\",\"2024-12-14T21:00\",\"2024-12-14T22:00\",\"2024-12-14T23:00\",\"2024-12-15T00:00\",\"2024-12-15T01:00\",\"2024-12-15T02:00\",\"2024-12-15T03:00\",\"2024-12-15T04:00\",\"2024-12-15T05:00\",\"2024-12-15T06:00\",\"2024-12-15T07:00\",\"2024-12-15T08:00\",\"2024-12-15T09:00\",\"2024-12-15T10:00\",\"2024-12-15T11:00\",\"2024-12-15T12:00\",\"2024-12-15T13:00\",\"2024-12-15T14:00\",\"2024-12-15T15:00\",\"2024-12-15T16:00\",\"2024-12-15T17:00\",\"2024-12-15T18:00\",\"2024-12-15T19:00\",\"2024-12-15T20:00\",\"2024-12-15T21:00\",\"2024-12-15T22:00\",\"2024-12-15T23:00\",\"2024-12-16T00:00\",\"2024-12-16T01:00\",\"2024-12-16T02:00\",\"2024-12-16T03:00\",\"2024-12-16T04:00\",\"2024-12-16T05:00\",\"2024-12-16T06:00\",\"2024-12-16T07:00\",\"2024-12-16T08:00\",\"2024-12-16T09:00\",\"2024-12-16T10:00\",\"2024-12-16T11:00\",\"2024-12-16T12:00\",\"2024-12-16T13:00\",\"2024-12-16T14:00\",\"2024-12-16T15:00\",\"2024-12-16T16:00\",\"2024-12-16T17:00\",\"2024-12-16T18:00\",\"2024-12-16T19:00\",\"2024-12-16T20:00\",\"2024-12-16T21:00\",\"2024-12-16T22:00\",\"2024-12-16T23:00\",\"2024-12-17T00:00\",\"2024-12-17T01:00\",\"2024-12-17T02:00\",\"2024-12-17T03:00\",\"2024-12-17T04:00\",\"2024-12-17T05:00\",\"2024-12-17T06:00\",\"2024-12-17T07:00\",\"2024-12-17T08:00\",\"2024-12-17T09:00\",\"2024-12-17T10:00\",\"2024-12-17T11:00\",\"2024-12-17T12:00\",\"2024-12-17T13:00\",\"2024-12-17T14:00\",\"2024-12-17T15:00\",\"2024-12-17T16:00\",\"2024-12-17T17:00\",\"2024-12-17T18:00\",\"2024-12-17T19:00\",\"2024-12-17T20:00\",\"2024-12-17T21:00\",\"2024-12-17T22:00\",\"2024-12-17T23:00\"],\"temperature_2m\":[2.5,2.4,2.3,2.3,2.2,2.2,2.0,2.0,2.1,2.6,3.0,3.4,3.2,3.1,2.8,2.5,2.4,2.2,2.0,1.9,1.7,1.5,1.5,1.6,1.6,1.6,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.7,2.1,2.2,2.3,2.4,2.4,2.2,2.1,1.9,1.9,1.7,1.3,1.1,0.7,0.6,0.4,0.2,0.1,-0.4,-0.2,-0.3,-0.2,-0.4,-0.6,-0.4,0.1,0.7,1.1,1.3,1.0,0.7,0.5,0.3,0.1,-0.2,-0.4,-0.6,-0.9,-1.0,-1.0,-1.0,-1.1,-1.2,-1.3,-1.5,-1.7,-1.7,-1.6,-1.3,-0.7,-0.1,0.7,0.7,0.6,0.5,0.6,0.7,0.8,0.8,0.7,0.7,1.1,1.5,2.0,2.3,2.6,2.8,2.9,2.9,3.0,3.0,3.1,3.3,3.7,4.1,4.5,4.5,4.4,4.3,4.2,4.0,3.9,3.8,3.7,3.7,3.8,3.9,4.2,4.7,5.3,5.8,6.4,6.9,7.2,6.1,6.6,7.0,7.3,7.5,7.8,8.0,8.2,8.3,8.4,8.5,8.5,8.5,8.5,8.5,8.5,8.4,8.4,8.2,8.0,7.8,7.6,7.5,7.4,7.3,7.3,7.4,7.7,8.1,8.3,8.2,7.9,7.6,7.5,7.3,7.2,7.0,6.8,6.6,6.4,6.2],\"weathercode\":[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,45,3,3,3,3,45,3,3,3,3,2,2,3,3,2,2,1,1,1,1,1,0,1,1,1,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,61,61,61,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,3,3,3,53,53,53,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],\"relativehumidity_2m\":[90,89,90,89,89,90,90,88,87,88,87,86,80,82,84,87,85,83,83,85,86,86,87,88,89,89,89,90,91,92,92,93,93,91,88,82,79,77,80,81,84,86,86,87,89,89,92,92,94,96,98,100,100,100,99,100,100,99,95,89,86,85,86,88,90,91,92,91,90,90,89,89,87,87,89,90,91,92,93,94,93,91,88,86,82,83,86,89,90,90,91,93,96,98,98,97,96,95,94,93,93,92,92,91,90,89,87,86,85,86,87,89,90,92,93,94,94,94,94,95,95,96,97,98,98,97,97,96,96,95,94,93,92,91,91,90,89,88,87,87,87,87,86,86,85,85,86,86,86,87,87,87,87,86,84,82,81,82,85,87,88,89,90,90,91,91,91,92],\"windspeed_10m\":[4.9,3.7,4.5,5.5,4.7,7.3,6.6,4.3,3.9,2.2,2.5,4.3,5.6,5.4,6.6,7.1,6.0,6.8,7.1,5.9,6.4,5.6,4.5,3.6,4.8,5.0,4.1,4.0,3.6,3.3,2.5,2.0,1.1,0.5,0.0,2.5,2.3,5.0,3.3,2.1,1.9,0.8,1.1,1.4,0.7,1.4,2.3,3.0,3.3,3.7,4.2,5.4,5.2,6.9,6.6,7.8,9.3,10.1,11.1,12.0,12.3,9.9,9.7,8.7,7.9,7.9,8.2,8.2,8.1,7.8,7.3,7.0,6.9,7.6,7.9,8.0,8.0,8.0,7.9,7.4,7.7,7.9,8.4,9.7,15.1,14.5,12.2,10.8,11.0,11.5,12.0,11.9,11.3,11.4,11.8,12.7,13.3,14.0,15.1,15.5,15.5,15.5,15.2,15.3,15.5,15.4,15.1,14.3,13.9,13.7,13.6,13.4,13.0,12.6,11.9,10.9,9.4,9.3,10.2,11.4,12.5,12.7,13.2,13.9,14.8,16.0,16.7,18.4,18.8,18.8,19.2,19.2,19.6,19.9,20.2,20.2,19.4,18.0,16.9,16.6,16.2,16.2,17.0,17.7,18.4,18.0,17.7,17.0,16.2,15.5,15.1,15.1,15.2,15.6,15.9,15.9,15.8,15.1,14.1,13.4,13.2,13.3,13.4,13.0,12.7,12.2,11.7,10.9],\"pressure_msl\":[1030.7,1031.0,1030.5,1030.3,1030.2,1030.1,1029.8,1030.0,1030.3,1030.5,1030.3,1030.1,1030.1,1029.6,1030.1,1030.4,1030.3,1030.4,1030.5,1030.5,1030.8,1030.9,1031.1,1031.2,1031.1,1031.2,1031.4,1031.5,1031.3,1031.4,1031.5,1031.7,1032.0,1032.4,1032.6,1032.3,1032.2,1032.2,1032.1,1032.0,1032.2,1032.3,1032.8,1033.1,1033.4,1033.6,1033.9,1033.9,1033.8,1033.7,1033.7,1033.9,1033.9,1033.8,1033.7,1033.8,1034.0,1034.0,1033.5,1032.7,1031.8,1030.5,1030.0,1029.6,1029.1,1028.5,1027.8,1027.1,1026.4,1025.8,1025.2,1024.2,1023.0,1022.0,1021.2,1020.4,1019.8,1019.4,1019.0,1018.7,1018.4,1018.0,1017.6,1016.7,1016.0,1015.6,1015.4,1015.2,1014.9,1014.6,1014.4,1014.3,1014.2,1014.2,1014.3,1014.5,1014.7,1014.9,1015.0,1015.3,1015.7,1016.1,1016.7,1017.4,1018.2,1019.0,1019.7,1020.4,1021.1,1021.9,1022.8,1023.6,1024.4,1025.1,1025.7,1026.2,1026.6,1026.8,1026.7,1026.4,1026.1,1025.9,1025.8,1025.7,1025.7,1025.7,1025.7,1025.4,1025.9,1026.2,1026.2,1026.1,1026.0,1026.1,1026.3,1026.5,1026.7,1026.8,1027.0,1027.1,1027.3,1027.4,1027.5,1027.6,1027.6,1027.5,1027.3,1027.1,1027.0,1026.9,1026.8,1026.8,1026.9,1026.8,1026.5,1026.0,1025.6,1025.3,1025.0,1024.8,1024.6,1024.3,1024.1,1023.9,1023.7,1023.5,1023.3,1023.2]}}")

        val mockApi = mockk<WeatherApi>()

        coEvery { mockApi.getWeatherInfo(any(), any()) } returns mockWeatherResponse

        val repository = WeatherRepositoryImpl(mockApi)

        val result = runBlocking { repository.getWeatherInfo(52.52, 13.41) }

        assertTrue(result is Resource.Success)

    }

    @Test
     fun testGetWeatherInfo_Error() = runTest {
        val mockException = Exception("Network Error")

        // Mock WeatherApi behavior to throw an exception
        val mockApi = mockk<WeatherApi>()
        coEvery { mockApi.getWeatherInfo(any(), any()) } throws mockException

        // Create the repository with the mock Api
        val repository = WeatherRepositoryImpl(mockApi)

        // Call the method under test
        val result = runBlocking { repository.getWeatherInfo(52.52, 13.41) }

        // Assert error result
        assertTrue(result is Resource.Error)
//        val errorResult = result as Resource.Error
//        assertNotNull(errorResult.message)
    }
}